name: go-tests

on: [workflow_call]

jobs:
  build:
    name: go-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ "1.20" ]
    steps:
      - name: Set up Golang
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Test and generate code coverage on main module
        run: make test

      - name: Test and generate code coverage on extensions/google-cloud
        run: |
          cd extensions/google-cloud
          make test
      - run: tail -n +2 extensions/google-cloud/cover.out >> cover.out && rm extensions/google-cloud/cover.out

      - name: Test and generate code coverage on extensions/cloudevents
        run: |
          cd extensions/cloudevents
          make test
      - run: tail -n +2 extensions/cloudevents/cover.out >> cover.out && rm extensions/cloudevents/cover.out

      - name: Go lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m --modules-download-mode=readonly
          skip-pkg-cache: true
          skip-build-cache: true

      - name: SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true
